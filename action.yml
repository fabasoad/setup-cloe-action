---
name: 'Setup Cloe'
author: Yevhen Fabizhevskyi
description: 'This action installs cloe.'
branding:
  icon: terminal
  color: gray-dark
runs:
  using: 'composite'
  steps:
    - name: Collect info
      id: info
      run: |
        GO_INSTALLED=$(if command -v go >/dev/null 2>&1; then echo true; else echo false; fi)
        echo "GO_INSTALLED=$GO_INSTALLED" >> $GITHUB_OUTPUT
        if [[ ! command -v go &> /dev/null ]]; then
          if [[ "${{ runner.os }}" == "Linux" ]]; then
            GO_BIN_1=linux
          elif [[ "${{ runner.os }}" == "macOS" ]]; then
            GO_BIN_1=darwin
          else
            GO_BIN_1=windows
          fi
          if [[ "${{ runner.arch }}" == "X86" ]]; then
            GO_BIN_2=386
          elif [[ "${{ runner.arch }}" == "X64" ]]; then
            GO_BIN_2=amd64
          elif [[ "${{ runner.arch }}" == "ARM64" ]]; then
            GO_BIN_2=arm64
          else
            echo "::error title=Unsupported OS::${{ runner.os }} ${{ runner.arch }} is not supported"
            exit 1
          fi
          echo "GO_BINARY=$GO_BIN_1-$GO_BIN_2" >> $GITHUB_OUTPUT
        fi
        mkdir -p "$GITHUB_WORKSPACE/go"
        echo "GO_PATH=$GITHUB_WORKSPACE/go" >> $GITHUB_OUTPUT
        CLOE_INSTALLED=$(if command -v cloe >/dev/null 2>&1; then echo true; else echo false; fi)
        echo "CLOE_INSTALLED=$CLOE_INSTALLED" >> $GITHUB_OUTPUT
        mkdir -p "$GITHUB_WORKSPACE/cloe"
        echo "CLOE_PATH=$GITHUB_WORKSPACE/cloe" >> $GITHUB_OUTPUT
      shell: sh
    - name: Install go
      if: ${{ steps.info.outputs.GO_INSTALLED == 'false' }}
      env:
        DOWNLOAD_URL: https://go.dev/dl/go1.19.3.${{ steps.info.outputs.GO_BINARY }}.tar.gz 
      run: |
        wget -c $DOWNLOAD_URL -O - | tar -xz
        echo "${{ steps.info.outputs.GO_PATH }}" >> $GITHUB_PATH
      shell: sh
      working-directory: ${{ steps.info.outputs.GO_PATH }}
    - name: Download Cloe
      if: ${{ steps.info.outputs.CLOE_INSTALLED == 'false' }}
      uses: actions/checkout@v3
      with:
        repository: cloe-lang/cloe
        fetch-depth: 1
        path: cloe
    - name: Install cloe
      if: ${{ steps.info.outputs.CLOE_INSTALLED == 'false' }}
      run: |
        go version
        rake build
        echo "$(pwd)/bin" >> $GITHUB_PATH
      shell: sh
      working-directory: ${{ steps.info.outputs.CLOE_PATH }}
